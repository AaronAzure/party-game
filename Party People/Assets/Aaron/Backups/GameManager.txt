using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class GameManager : MonoBehaviour
{
    // GLOBAL VARIABLES

    [SerializeField] private int nPlayers;
    //private Text textPlayer;

    private int playerOrder;
    private PathFollower player1;
    private PathFollower player2;
    private PathFollower player3;
    private PathFollower player4;
    private PathFollower player5;
    private PathFollower player6;
    private PathFollower player7;
    private PathFollower player8;

    private Camera mainCam;
    private float transitionTime = 0.5f;
    [SerializeField] Image blackScreen;
    [SerializeField] Text turnNumber;
    private int currentTurn;
    private int maxTurn = 20;       // CONST
    private GameController controller;

    // -------------------------------------------------------------------------------
    // RECEIVE INFO/DATA FROM GAME CONTROLLER

    private void SET_PLAYERS()
    {
        switch (nPlayers)
        {
            case 2:
                player3.gameObject.SetActive(false);
                player4.gameObject.SetActive(false);
                player5.gameObject.SetActive(false);
                player6.gameObject.SetActive(false);
                player7.gameObject.SetActive(false);
                player8.gameObject.SetActive(false);
                break;
            case 4:
                player5.gameObject.SetActive(false);
                player6.gameObject.SetActive(false);
                player7.gameObject.SetActive(false);
                player8.gameObject.SetActive(false);
                break;
            case 6:
                player7.gameObject.SetActive(false);
                player8.gameObject.SetActive(false);
                break;
            case 8:
                break;
            default:
                Debug.LogError("DISABLING the WRONG number of players!!");
                break;
        }
    }

    // -------------------------------------------------------------------------------

    // Start is called before the first frame update
    void Start()
    {
        // SCREEN FADES FROM BLACK
        blackScreen.canvasRenderer.SetAlpha(1);
        blackScreen.gameObject.SetActive(true);
        blackScreen.CrossFadeAlpha(0f, transitionTime, false);

        controller = GameObject.Find("Game_Controller").GetComponent<GameController>();
        nPlayers = controller.nPlayers;

        player1 = GameObject.Find("Player_1").GetComponent<PathFollower>();
        player2 = GameObject.Find("Player_2").GetComponent<PathFollower>();
        player3 = GameObject.Find("Player_3").GetComponent<PathFollower>();
        player4 = GameObject.Find("Player_4").GetComponent<PathFollower>();
        player5 = GameObject.Find("Player_5").GetComponent<PathFollower>();
        player6 = GameObject.Find("Player_6").GetComponent<PathFollower>();
        player7 = GameObject.Find("Player_7").GetComponent<PathFollower>();
        player8 = GameObject.Find("Player_8").GetComponent<PathFollower>();

        SET_PLAYERS();

        // ALWAYS DO AFTER FIRST TURN
        if (controller.hasStarted)
        {
            currentTurn = controller.turnNumber;
        }
        // DO ONCE
        else
        {
            currentTurn = 1;
        }

        // GET PLAYERS
        if (SceneManager.GetActiveScene().buildIndex > 1)
        {
            playerOrder = 1;
            mainCam = GameObject.Find("Main Camera").GetComponent<Camera>();

            mainCam.gameObject.SetActive(false);
            player1.BEGIN(); 

            turnNumber.text = "Turn: " + currentTurn + " / " + maxTurn;
            StartCoroutine(CAMERA_TRANSITION());
        }
    }


    public void INCREMENT_TURN()
    {
        playerOrder++;
        StartCoroutine(CAMERA_TRANSITION());
    }

    public void NEXT_PLAYER_TURN()
    {
        if (playerOrder <= nPlayers)
        {
            if (playerOrder == 1)
            {
                Debug.Log("Player 1 turn");
                player1.StartCoroutine(player1.YOUR_TURN());
            }
            else if (playerOrder == 2)
            {
                Debug.Log("Player 2 turn");
                player2.StartCoroutine(player2.YOUR_TURN());
            }
            else if (playerOrder == 3)
            {
                Debug.Log("Player 3 turn");
                player3.StartCoroutine(player3.YOUR_TURN());
            }
            else if (playerOrder == 4)
            {
                Debug.Log("Player 4 turn");
                player4.StartCoroutine(player4.YOUR_TURN());
            }
            else if (playerOrder == 5)
            {
                Debug.Log("Player 5 turn");
                player4.StartCoroutine(player5.YOUR_TURN());
            }
            else if (playerOrder == 6)
            {
                Debug.Log("Player 6 turn");
                player4.StartCoroutine(player6.YOUR_TURN());
            }
            else if (playerOrder == 7)
            {
                Debug.Log("Player 7 turn");
                player4.StartCoroutine(player7.YOUR_TURN());
            }
            else if (playerOrder == 8)
            {
                Debug.Log("Player 8 turn");
                player4.StartCoroutine(player8.YOUR_TURN());
            }
        }
        else
        {
            // MINIGAME TIME!
            controller.GAME_START();
            controller.NEXT_TURN();
            PlayerPrefs.SetString("sceneName", SceneManager.GetActiveScene().name);
            PlayerPrefs.Save();
            SceneManager.LoadScene("Quest_Game");

            // PLAYER TURN AGAIN
            playerOrder = 1;
            StartCoroutine(CAMERA_TRANSITION());
        }
    }

    IEnumerator CAMERA_TRANSITION()
    {
        yield return new WaitForSeconds(transitionTime + 0.3f);
        blackScreen.gameObject.SetActive(true);
        // SCREEN FADES FROM BLACK
        blackScreen.CrossFadeAlpha(0f, transitionTime, false);
        NEXT_PLAYER_TURN();
    }

    // SCREEN FADES TO BLACK
    public IEnumerator MAIN_CAM_ON()
    {
        // SCREEN FADES TO BLACK
        blackScreen.gameObject.SetActive(true);
        blackScreen.CrossFadeAlpha(1f, transitionTime, false);
        // CAMERA TURNS ON
        yield return new WaitForSeconds(transitionTime + 0.1f);
        mainCam.gameObject.SetActive(true);
    }

    // SCREEN FADES FROM BLACK
    public IEnumerator MAIN_CAM_OFF()
    {
        // SCREEN FADES FROM BLACK
        blackScreen.gameObject.SetActive(true);
        blackScreen.CrossFadeAlpha(0f, transitionTime, false);
        // CAMERA TURNS OFF
        yield return new WaitForSeconds(transitionTime);
        mainCam.gameObject.SetActive(false);
    }

}
